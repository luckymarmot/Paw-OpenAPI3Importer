{
  "openapi": "3.0.3",
  "info": {
    "title": "OpenAPI 3.0 Sample Project.paw",
    "version": "1599224234466"
  },
  "paths": {
    "/api/v3/users/{userId}/": {
      "servers": [
        {
          "url": "https://echo.paw.cloud/"
        }
      ],
      "get": {
        "operationId": "bb4672ed-9007-4519-9030-7b9be1c7ea56",
        "summary": "Get User",
        "description": "I voluntarily included the Base URL and Authorization header as an environment variable.",
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "username,id,age",
              "description": "Filter fields to be returned"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "Bearer SOME_TOKEN",
              "description": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json",
              "description": "Accep format. Default \"application/json\"."
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "42",
              "description": "Identifier of the user"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v3/users/": {
      "servers": [
        {
          "url": "https://echo.paw.cloud/"
        }
      ],
      "get": {
        "operationId": "dabe0a0a-3103-4683-bf5d-d65d0786ae11",
        "summary": "List Users",
        "description": "",
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "mittsh",
              "description": "Search query"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "Bearer SOME_TOKEN",
              "description": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json",
              "description": "Accep format. Default \"application/json\"."
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v3/users/{username}/": {
      "servers": [
        {
          "url": "https://echo.paw.cloud/"
        }
      ],
      "post": {
        "operationId": "1c03e7f7-51c5-4b49-877b-c0a98e0ba390",
        "summary": "Create User",
        "description": "I believe it's ok not to include the description fields included in body. This is possible in Paw, but should be a JSON Schema in OpenAPI 3.0. I think this is not necessary to implement this.\n\nFields contained in the body can be simply ignored when exporting.",
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "parameters": [
          {
            "name": "expiry",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "2020-09-04T14:59:14+02:00",
              "description": "Expiration date of the request. Optional."
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "Bearer SOME_TOKEN",
              "description": ""
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json",
              "description": "Accep format. Default \"application/json\"."
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json; charset=utf-8",
              "description": ""
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "mittsh",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "value": {
                  "id": "Deb2OoDniILQJCwO",
                  "username": "mittsh"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/instapic/pictures/": {
      "servers": [
        {
          "url": "https://echo.paw.cloud/"
        }
      ],
      "get": {
        "operationId": "a97bd036-f967-477d-b843-940f2655113c",
        "summary": "Get Pictures",
        "description": "An API that returns pictures. That's an example of an API that won't be using environment variables but only request variables.",
        "responses": {
          "200": {
            "content": {
              "text/html": {
                "schema": {
                  "default": "\n\n<!doctype html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>echo</title>\n        <meta name=\"description\" content=\"\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css\">\n        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap-theme.min.css\">\n        <style type=\"text/css\">\n        body {\n            margin: 5px 20px;\n        }\n        footer {\n            margin: 25px 0 0 0;\n            padding: 8px 0;\n            text-align: center;\n            border-top: 1px solid #ddd;\n            font-size: 12px;\n            color: #555;\n        }\n        .content {\n            max-width: 800px;\n            margin: 0 auto;\n        }\n        </style>\n    </head>\n    <body>\n        <div class=\"content\">\n            <h1>HTTP Echo</h1>\n\n            <pre>GET /instapic/pictures/?size=768&amp;q=dogs HTTP/1.1</pre>\n\n            <h2>Request</h2>\n\n            <div class=\"table-responsive\">\n                <table class=\"table table-bordered\">\n                    <tr>\n                        <td>Method</td>\n                        <td>GET</td>\n                    </tr>\n                    <tr>\n                        <td>URL</td>\n                        <td>https://echo.paw.cloud/instapic/pictures/?size=768&amp;q=dogs</td>\n                    </tr>\n                    <tr>\n                        <td>Path</td>\n                        <td>/instapic/pictures/</td>\n                    </tr>\n                    <tr>\n                        <td>Client IP</td>\n                        <td>91.196.215.178</td>\n                    </tr>\n                </table>\n            </div>\n\n            <h2>URL parameters</h2>\n            <div class=\"table-responsive\">\n                <table class=\"table table-bordered\">\n                    <thead>\n                    <tr>\n                        <th>Key</th>\n                        <th>Value</th>\n                    </tr>\n                    </thead>\n                    \n                    <tr>\n                        <td>q</td>\n                        <td>dogs</td>\n                    </tr>\n                    \n                    <tr>\n                        <td>size</td>\n                        <td>768</td>\n                    </tr>\n                    \n                </table>\n            </div>\n\n            <h2>Headers</h2>\n            <div class=\"table-responsive\">\n                <table class=\"table table-bordered\">\n                    <thead>\n                    <tr>\n                        <th>Key</th>\n                        <th>Value</th>\n                    </tr>\n                    </thead>\n                    \n                    <tr>\n                        <td>Authorization</td>\n                        <td>Basic bXl1c2VyOm15cGFzc3dvcmQ=</td>\n                    </tr>\n                    \n                    <tr>\n                        <td>Connection</td>\n                        <td>keep-alive</td>\n                    </tr>\n                    \n                    <tr>\n                        <td>Host</td>\n                        <td>echo.paw.cloud</td>\n                    </tr>\n                    \n                    <tr>\n                        <td>User-Agent</td>\n                        <td>Paw/3.1.10 (Macintosh; OS X/10.15.6) GCDHTTPRequest</td>\n                    </tr>\n                    \n                    <tr>\n                        <td>X-Forwarded-Port</td>\n                        <td>443</td>\n                    </tr>\n                    \n                    <tr>\n                        <td>X-Forwarded-Proto</td>\n                        <td>https</td>\n                    </tr>\n                    \n                </table>\n            </div>\n\n            <h2>Body</h2>\n            \n            <em>No request body</em>\n            \n\n            <footer>\n                \n                Learn more about <a href=\"https://paw.cloud/\" target=\"_blank\">Paw – The most advanced HTTP client for Mac</a>\n            </footer>\n        </div>\n    </body>\n</html>\n"
                }
              }
            },
            "description": "Response 200",
            "headers": {
              "Content-Type": {
                "schema": {
                  "default": "text/html; charset=utf-8"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "default": "*"
                }
              },
              "Content-Security-Policy": {
                "schema": {
                  "default": "default-src 'self'; style-src 'unsafe-inline' https://maxcdn.bootstrapcdn.com; font-src https://maxcdn.bootstrapcdn.com/; report-uri https://pawcloud.report-uri.com/r/d/csp/enforce"
                }
              },
              "X-Xss-Protection": {
                "schema": {
                  "default": "1; mode=block"
                }
              },
              "Server": {
                "schema": {
                  "default": "nginx/1.17.5"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "default": "Content-Type"
                }
              },
              "Referrer-Policy": {
                "schema": {
                  "default": "no-referrer, strict-origin-when-cross-origin"
                }
              },
              "Date": {
                "schema": {
                  "default": "Fri, 04 Sep 2020 12:56:09 GMT"
                }
              },
              "X-Robots-Tag": {
                "schema": {
                  "default": "noindex"
                }
              },
              "Strict-Transport-Security": {
                "schema": {
                  "default": "max-age=31536000; includeSubDomains; preload"
                }
              },
              "Paw-Location": {
                "schema": {
                  "default": "https://paw.cloud"
                }
              },
              "Content-Length": {
                "schema": {
                  "default": "4169"
                }
              },
              "Connection": {
                "schema": {
                  "default": "Close"
                }
              },
              "X-Content-Type-Options": {
                "schema": {
                  "default": "nosniff"
                }
              },
              "Paw-Content-Types": {
                "schema": {
                  "default": "text/html,text/plain,application/json,application/x-www-form-urlencoded"
                }
              },
              "Vary": {
                "schema": {
                  "default": "Accept-Encoding, Accept-Encoding"
                }
              },
              "X-Frame-Options": {
                "schema": {
                  "default": "deny"
                }
              }
            }
          },
          "default": {
            "description": "Default response"
          }
        },
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "768",
              "description": "Max size in pixels. Required."
            }
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "dogs",
              "description": "Search pictures by query. Optional."
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "Basic bXl1c2VyOm15cGFzc3dvcmQ=",
              "description": "This is a cool auth method."
            }
          }
        ]
      }
    },
    "/instapic/pictures/{Picture ID}/": {
      "servers": [
        {
          "url": "https://echo.paw.cloud/"
        }
      ],
      "get": {
        "operationId": "89dc13e4-af71-4b45-8047-d0c4a32b6b18",
        "summary": "Get A Picture",
        "description": "An API that returns pictures. That's an example of an API that won't be using environment variables but only request variables.",
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "768",
              "description": "Max size in pixels to return. Required."
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "Basic bXl1c2VyOm15cGFzc3dvcmQ=",
              "description": "This is a cool auth method."
            }
          },
          {
            "name": "Picture ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "4242",
              "description": "ID of the picture to get."
            }
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
